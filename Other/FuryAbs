public static Ability MakeAbNickJr (int counter)
    {
        switch (counter)
        {
            case 0: BasicAb slam= new BasicAb ("Body Slam", "single", "enemy", 45);
            return slam;
            case 1: BasicAb slash= new BasicAb ("Combat Knife", "single", "enemy", 35); String[] bleed= StatFactory.SetParam ("Bleed", "50", "15", "1", "false");
            slash.AddStatString(bleed);
            return slash;
            case 2: BuffAb cloak= new BuffAb ("Cloaking Tech", "self", "self", 3); String[] tech= StatFactory.SetParam ("Invisible", "100", "1", "1", "true");
            cloak.AddStatString(tech);
            return cloak;
            case 3: OtherAb kill= new OtherAb //fgiure it out
            case 4: AttackAb poke= new AttackAb ("Double Tap", "single", "enemy", 35, 2); poke.multi=1;
            return poke;
        }
        return null; 
    }
    public static Ability MakeAbNickSr (int counter)
    {
        switch (counter)
        {
            case 0: BasicAb frag= new BasicAb ("Frag Grenade", "single", "enemy", 45); frag.special.add (new Ricochet (300));
            return frag;
            case 1: BasicAb smg= new BasicAb ("SMG", "AoE", "enemy", 35);
            return smg;
            case 2: BuffAb cache= new BuffAb ("Hidden Weapons Cache", "single", "ally inclusive", 0); 
            String[] sword= StatFactory.SetParam("Damage Up", "100", "10", "1", "knull"); cache.AddStatString(sword);
            
            for (String[] array: statstrings) //in buffab
                    {  
                       StatEff New=StatFactory.MakeStat(array); //this is how selfapply and other apply are populated
                       if (array[4].equalsIgnoreCase("true"))
                       {
                           selfapply.add(New);
                       }
                       else if (array[4].equalsIgnoreCase("false"))
                       {
                           otherapply.add(New);
                       }
                       else
                       {
                            if (chump.team1==user.team1) //buff abs only target friends; so it's either a teammate or self
                            //wait no that doesnt work blast
                            {
                                otherapply.add(New);
                            }
                            else 
                            {
                                selfapply.add(New);
                            }
                       }
                    }
                    
            return cache;
            case 3: return null;
            case 4: AttackAb air= new AttackAb ("Airstrike", "AoE", "enemy", 90, 5);
            return air;
        }
        return null; 
    }
